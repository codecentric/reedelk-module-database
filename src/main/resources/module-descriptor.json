{"name":"module-database","displayName":"module-database","components":[{"hidden":false,"displayName":"DDL Execute","description":"Executes the given DDL statement/s on the configured data source connection. This component can be used to create/drop/alter/rename database tables. Supported databases and drivers: H2 (org.h2.Driver), MySQL (com.mysql.cj.jdbc.Driver), Oracle (oracle.jdbc.Driver), PostgreSQL (org.postgresql.Driver). The database drivers libraries must be present in the \u003cb\u003e{RUNTIME_HOME}/lib\u003c/b\u003e directory.","fullyQualifiedName":"com.reedelk.database.component.DDLExecute","type":"PROCESSOR","properties":[{"name":"connection","initValue":"###USE_DEFAULT_VALUE###","description":"Data source configuration where the DDL statements will be executed on. Shared configurations use the same connection pool.","displayName":"Connection","type":{"classname":"com.reedelk.module.descriptor.model.property.ObjectDescriptor","instance":{"shared":"YES","dialogTitle":"Data Source Configuration","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.database.component.ConnectionConfiguration","objectProperties":[{"name":"connectionURL","example":"\u003cul\u003e\u003cli\u003eH2: jdbc:h2:~/test\u003c/li\u003e\u003cli\u003eMySQL: jdbc:mysql://localhost:3306/mydatabase\u003c/li\u003e\u003cli\u003eOracle: jdbc:oracle:thin:@localhost:1521:orcl\u003c/li\u003e\u003cli\u003ePostgreSQL: jdbc:postgresql://host:port/database\u003c/li\u003e\u003c/ul\u003e","initValue":"jdbc:mysql://localhost:3306/mydatabase","hintValue":"jdbc:mysql://localhost:3306/mydatabase","description":"The connection URL is a string that a JDBC driver uses to connect to a database. It can contain information such as where to search for the database, the name of the database to connect to, and configuration properties.","displayName":"Connection URL","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"username","example":"myDatabaseUser","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myDatabaseUser","description":"The username to be used to create the database connection.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"password","example":"myDatabasePassword","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used to create the database connection.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.property.PasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[]},{"name":"databaseDriver","example":"ORACLE","initValue":"MYSQL","description":"The fully qualified name of the JDBC database driver class. The JDBC drivers must be present in the {RUNTIME_HOME}/lib directory.","displayName":"Driver","type":{"classname":"com.reedelk.module.descriptor.model.property.EnumDescriptor","instance":{"nameAndDisplayNameMap":{"MYSQL":"MySQL (com.mysql.cj.jdbc.Driver)","H2":"H2 (org.h2.Driver)","ORACLE":"Oracle (oracle.jdbc.OracleDriver)","POSTGRESQL":"PostgreSQL (org.postgresql.Driver)"},"type":"java.lang.Enum"}},"whens":[]},{"name":"minPoolSize","example":"5","initValue":"###USE_DEFAULT_VALUE###","hintValue":"3","description":"Minimum number of Connections the connection pool will maintain at any given time.","displayName":"Min Pool Size","defaultValue":"3","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]},{"name":"maxPoolSize","example":"20","initValue":"###USE_DEFAULT_VALUE###","hintValue":"15","description":"Maximum number of Connections the connection pool will maintain at any given time.","displayName":"Max Pool Size","defaultValue":"15","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]},{"name":"acquireIncrement","example":"5","initValue":"###USE_DEFAULT_VALUE###","hintValue":"3","description":"Determines how many connections at a time the connection pool will try to acquire when the pool is exhausted.","displayName":"Acquire Increment","defaultValue":"3","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]}],"type":"com.reedelk.module.descriptor.model.property.ObjectDescriptor$TypeObject"}},"whens":[]},{"name":"strategy","example":"FROM_FILE","initValue":"INLINE","description":"Execution strategy for this DDL. If \u003cb\u003eINLINE\u003c/b\u003e then a static or dynamic inline statement is executed from the given \u003ci\u003eddlDefinition\u003c/i\u003e property, otherwise if \u003cb\u003eFROM_FILE\u003c/b\u003e DDL statements are executed from the given \u003ci\u003eddlFile\u003c/i\u003e local project\u0027s file.","displayName":"Strategy","defaultValue":"INLINE","type":{"classname":"com.reedelk.module.descriptor.model.property.EnumDescriptor","instance":{"nameAndDisplayNameMap":{"FROM_FILE":"From DDL file","INLINE":"From inline DDL"},"type":"java.lang.Enum"}},"whens":[]},{"name":"ddlDefinition","example":"\u003cul\u003e\u003cli\u003e\u003ccode\u003eCREATE TABLE person (id INT, name VARCHAR(255), surname VARCHAR(255), address VARCHAR(255), city VARCHAR(255))\u003c/code\u003e\u003c/li\u003e\u003cli\u003e\u003ccode\u003eDROP TABLE person\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e","initValue":"###USE_DEFAULT_VALUE###","hintValue":"CREATE TABLE person (id INT, name VARCHAR(255), surname VARCHAR(255), address VARCHAR(255), city VARCHAR(255))","description":"Sets the DDL definition to be executed by this component. The DDL definition might be a static or dynamic value.","displayName":"DDL Definition","type":{"classname":"com.reedelk.module.descriptor.model.property.DynamicValueDescriptor","instance":{"type":"com.reedelk.runtime.api.script.dynamicvalue.DynamicString"}},"whens":[{"propertyName":"strategy","propertyValue":"INLINE"}]},{"name":"ddlFile","example":"assets/create_table_company.sql","initValue":"###USE_DEFAULT_VALUE###","description":"Sets the file path in the project\u0027s resources directory containing the DDL statements to be executed when the strategy is \u003cb\u003eFROM_FILE\u003c/b\u003e.","displayName":"DDL File","type":{"classname":"com.reedelk.module.descriptor.model.property.ResourceTextDescriptor","instance":{"hintBrowseFile":"Select DDL File ...","type":"com.reedelk.runtime.api.resource.ResourceText"}},"whens":[{"propertyName":"strategy","propertyValue":"FROM_FILE"}]}]},{"hidden":false,"displayName":"SQL Delete","description":"Executes a DELETE SQL statement on the configured data source connection. Supported databases and drivers: H2 (org.h2.Driver), MySQL (com.mysql.cj.jdbc.Driver), Oracle (oracle.jdbc.Driver), PostgreSQL (org.postgresql.Driver).","fullyQualifiedName":"com.reedelk.database.component.Delete","type":"PROCESSOR","properties":[{"name":"connection","initValue":"###USE_DEFAULT_VALUE###","description":"Data source configuration to be used by this query. Shared configurations use the same connection pool.","displayName":"Connection","type":{"classname":"com.reedelk.module.descriptor.model.property.ObjectDescriptor","instance":{"shared":"YES","dialogTitle":"Data Source Configuration","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.database.component.ConnectionConfiguration","objectProperties":[{"name":"connectionURL","example":"\u003cul\u003e\u003cli\u003eH2: jdbc:h2:~/test\u003c/li\u003e\u003cli\u003eMySQL: jdbc:mysql://localhost:3306/mydatabase\u003c/li\u003e\u003cli\u003eOracle: jdbc:oracle:thin:@localhost:1521:orcl\u003c/li\u003e\u003cli\u003ePostgreSQL: jdbc:postgresql://host:port/database\u003c/li\u003e\u003c/ul\u003e","initValue":"jdbc:mysql://localhost:3306/mydatabase","hintValue":"jdbc:mysql://localhost:3306/mydatabase","description":"The connection URL is a string that a JDBC driver uses to connect to a database. It can contain information such as where to search for the database, the name of the database to connect to, and configuration properties.","displayName":"Connection URL","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"username","example":"myDatabaseUser","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myDatabaseUser","description":"The username to be used to create the database connection.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"password","example":"myDatabasePassword","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used to create the database connection.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.property.PasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[]},{"name":"databaseDriver","example":"ORACLE","initValue":"MYSQL","description":"The fully qualified name of the JDBC database driver class. The JDBC drivers must be present in the {RUNTIME_HOME}/lib directory.","displayName":"Driver","type":{"classname":"com.reedelk.module.descriptor.model.property.EnumDescriptor","instance":{"nameAndDisplayNameMap":{"MYSQL":"MySQL (com.mysql.cj.jdbc.Driver)","H2":"H2 (org.h2.Driver)","ORACLE":"Oracle (oracle.jdbc.OracleDriver)","POSTGRESQL":"PostgreSQL (org.postgresql.Driver)"},"type":"java.lang.Enum"}},"whens":[]},{"name":"minPoolSize","example":"5","initValue":"###USE_DEFAULT_VALUE###","hintValue":"3","description":"Minimum number of Connections the connection pool will maintain at any given time.","displayName":"Min Pool Size","defaultValue":"3","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]},{"name":"maxPoolSize","example":"20","initValue":"###USE_DEFAULT_VALUE###","hintValue":"15","description":"Maximum number of Connections the connection pool will maintain at any given time.","displayName":"Max Pool Size","defaultValue":"15","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]},{"name":"acquireIncrement","example":"5","initValue":"###USE_DEFAULT_VALUE###","hintValue":"3","description":"Determines how many connections at a time the connection pool will try to acquire when the pool is exhausted.","displayName":"Acquire Increment","defaultValue":"3","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]}],"type":"com.reedelk.module.descriptor.model.property.ObjectDescriptor$TypeObject"}},"whens":[]},{"name":"query","example":"\u003cul\u003e\u003cli\u003eDELETE FROM orders WHERE id \u003d 1\u003c/li\u003e\u003cli\u003eDELETE FROM orders WHERE name LIKE \u0027item%\u0027\u003c/li\u003e\u003c/ul\u003e","initValue":"###USE_DEFAULT_VALUE###","hintValue":"DELETE FROM orders WHERE id \u003d 1","description":"The \u003cb\u003edelete\u003c/b\u003e query to be executed on the database with the given Data Source connection. The query might contain parameters which will be filled from the expressions defined in the parameters mapping configuration below.","displayName":"Delete Query","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"parametersMapping","example":"id \u003e \u003ccode\u003emessage.payload()\u003c/code\u003e","initValue":"###USE_DEFAULT_VALUE###","description":"Mapping of delete query parameters \u003e values. Query parameters will be evaluated and replaced each time before the query is executed.","displayName":"Query Parameter Mappings","type":{"classname":"com.reedelk.module.descriptor.model.property.DynamicMapDescriptor","instance":{"keyName":"Query Parameter Name","valueName":"Query Parameter Value","tabGroup":"Query Parameter Mappings","type":"com.reedelk.runtime.api.script.dynamicmap.DynamicObjectMap"}},"whens":[]}]},{"hidden":false,"displayName":"SQL Insert","description":"Executes an INSERT SQL statement on the configured data source connection. Supported databases and drivers: H2 (org.h2.Driver), MySQL (com.mysql.cj.jdbc.Driver), Oracle (oracle.jdbc.Driver), PostgreSQL (org.postgresql.Driver).","fullyQualifiedName":"com.reedelk.database.component.Insert","type":"PROCESSOR","properties":[{"name":"connection","initValue":"###USE_DEFAULT_VALUE###","description":"Data source configuration to be used by this query. Shared configurations use the same connection pool.","displayName":"Connection","type":{"classname":"com.reedelk.module.descriptor.model.property.ObjectDescriptor","instance":{"shared":"YES","dialogTitle":"Data Source Configuration","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.database.component.ConnectionConfiguration","objectProperties":[{"name":"connectionURL","example":"\u003cul\u003e\u003cli\u003eH2: jdbc:h2:~/test\u003c/li\u003e\u003cli\u003eMySQL: jdbc:mysql://localhost:3306/mydatabase\u003c/li\u003e\u003cli\u003eOracle: jdbc:oracle:thin:@localhost:1521:orcl\u003c/li\u003e\u003cli\u003ePostgreSQL: jdbc:postgresql://host:port/database\u003c/li\u003e\u003c/ul\u003e","initValue":"jdbc:mysql://localhost:3306/mydatabase","hintValue":"jdbc:mysql://localhost:3306/mydatabase","description":"The connection URL is a string that a JDBC driver uses to connect to a database. It can contain information such as where to search for the database, the name of the database to connect to, and configuration properties.","displayName":"Connection URL","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"username","example":"myDatabaseUser","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myDatabaseUser","description":"The username to be used to create the database connection.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"password","example":"myDatabasePassword","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used to create the database connection.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.property.PasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[]},{"name":"databaseDriver","example":"ORACLE","initValue":"MYSQL","description":"The fully qualified name of the JDBC database driver class. The JDBC drivers must be present in the {RUNTIME_HOME}/lib directory.","displayName":"Driver","type":{"classname":"com.reedelk.module.descriptor.model.property.EnumDescriptor","instance":{"nameAndDisplayNameMap":{"MYSQL":"MySQL (com.mysql.cj.jdbc.Driver)","H2":"H2 (org.h2.Driver)","ORACLE":"Oracle (oracle.jdbc.OracleDriver)","POSTGRESQL":"PostgreSQL (org.postgresql.Driver)"},"type":"java.lang.Enum"}},"whens":[]},{"name":"minPoolSize","example":"5","initValue":"###USE_DEFAULT_VALUE###","hintValue":"3","description":"Minimum number of Connections the connection pool will maintain at any given time.","displayName":"Min Pool Size","defaultValue":"3","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]},{"name":"maxPoolSize","example":"20","initValue":"###USE_DEFAULT_VALUE###","hintValue":"15","description":"Maximum number of Connections the connection pool will maintain at any given time.","displayName":"Max Pool Size","defaultValue":"15","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]},{"name":"acquireIncrement","example":"5","initValue":"###USE_DEFAULT_VALUE###","hintValue":"3","description":"Determines how many connections at a time the connection pool will try to acquire when the pool is exhausted.","displayName":"Acquire Increment","defaultValue":"3","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]}],"type":"com.reedelk.module.descriptor.model.property.ObjectDescriptor$TypeObject"}},"whens":[]},{"name":"query","example":"\u003cul\u003e\u003cli\u003e\u003ccode\u003eINSERT orders (id, name) VALUES (1, \u0027Items order\u0027)\u003c/code\u003e\u003c/li\u003e\u003cli\u003e\u003ccode\u003eINSERT orders VALUES (32, \u0027Items order\u0027, \u0027Online shop order\u0027)\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e","initValue":"###USE_DEFAULT_VALUE###","hintValue":"INSERT orders (id, name) VALUES (1, \u0027Items order\u0027)","description":"The \u003cb\u003einsert\u003c/b\u003e query to be executed on the database with the given Data Source connection. The query might contain parameters which will be filled from the expressions defined in the parameters mapping configuration below.","displayName":"Insert Query","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"parametersMapping","example":"name \u003e \u003ccode\u003emessage.payload()\u003c/code\u003e","initValue":"###USE_DEFAULT_VALUE###","description":"Mapping of insert query parameters \u003e values. Query parameters will be evaluated and replaced each time before the query is executed.","displayName":"Query Parameter Mappings","type":{"classname":"com.reedelk.module.descriptor.model.property.DynamicMapDescriptor","instance":{"keyName":"Query Parameter Name","valueName":"Query Parameter Value","tabGroup":"Query Parameter Mappings","type":"com.reedelk.runtime.api.script.dynamicmap.DynamicObjectMap"}},"whens":[]}]},{"hidden":false,"displayName":"SQL Select","description":"Executes a SELECT SQL statement on the configured data source connection. Supported databases and drivers: H2 (org.h2.Driver), MySQL (com.mysql.cj.jdbc.Driver), Oracle (oracle.jdbc.Driver), PostgreSQL (org.postgresql.Driver).","fullyQualifiedName":"com.reedelk.database.component.Select","type":"PROCESSOR","properties":[{"name":"connection","initValue":"###USE_DEFAULT_VALUE###","description":"Data source configuration to be used by this query. Shared configurations use the same connection pool.","displayName":"Connection","type":{"classname":"com.reedelk.module.descriptor.model.property.ObjectDescriptor","instance":{"shared":"YES","dialogTitle":"Data Source Configuration","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.database.component.ConnectionConfiguration","objectProperties":[{"name":"connectionURL","example":"\u003cul\u003e\u003cli\u003eH2: jdbc:h2:~/test\u003c/li\u003e\u003cli\u003eMySQL: jdbc:mysql://localhost:3306/mydatabase\u003c/li\u003e\u003cli\u003eOracle: jdbc:oracle:thin:@localhost:1521:orcl\u003c/li\u003e\u003cli\u003ePostgreSQL: jdbc:postgresql://host:port/database\u003c/li\u003e\u003c/ul\u003e","initValue":"jdbc:mysql://localhost:3306/mydatabase","hintValue":"jdbc:mysql://localhost:3306/mydatabase","description":"The connection URL is a string that a JDBC driver uses to connect to a database. It can contain information such as where to search for the database, the name of the database to connect to, and configuration properties.","displayName":"Connection URL","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"username","example":"myDatabaseUser","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myDatabaseUser","description":"The username to be used to create the database connection.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"password","example":"myDatabasePassword","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used to create the database connection.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.property.PasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[]},{"name":"databaseDriver","example":"ORACLE","initValue":"MYSQL","description":"The fully qualified name of the JDBC database driver class. The JDBC drivers must be present in the {RUNTIME_HOME}/lib directory.","displayName":"Driver","type":{"classname":"com.reedelk.module.descriptor.model.property.EnumDescriptor","instance":{"nameAndDisplayNameMap":{"MYSQL":"MySQL (com.mysql.cj.jdbc.Driver)","H2":"H2 (org.h2.Driver)","ORACLE":"Oracle (oracle.jdbc.OracleDriver)","POSTGRESQL":"PostgreSQL (org.postgresql.Driver)"},"type":"java.lang.Enum"}},"whens":[]},{"name":"minPoolSize","example":"5","initValue":"###USE_DEFAULT_VALUE###","hintValue":"3","description":"Minimum number of Connections the connection pool will maintain at any given time.","displayName":"Min Pool Size","defaultValue":"3","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]},{"name":"maxPoolSize","example":"20","initValue":"###USE_DEFAULT_VALUE###","hintValue":"15","description":"Maximum number of Connections the connection pool will maintain at any given time.","displayName":"Max Pool Size","defaultValue":"15","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]},{"name":"acquireIncrement","example":"5","initValue":"###USE_DEFAULT_VALUE###","hintValue":"3","description":"Determines how many connections at a time the connection pool will try to acquire when the pool is exhausted.","displayName":"Acquire Increment","defaultValue":"3","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]}],"type":"com.reedelk.module.descriptor.model.property.ObjectDescriptor$TypeObject"}},"whens":[]},{"name":"query","example":"\u003cul\u003e\u003cli\u003e\u003ccode\u003eSELECT * FROM orders WHERE name \u003d \u0027John\u0027 AND surname \u003d \u0027Doe\u0027\u003c/code\u003e\u003c/li\u003e\u003cli\u003e\u003ccode\u003eSELECT * FROM orders WHERE name LIKE :name AND surname \u003d :surname\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e","initValue":"###USE_DEFAULT_VALUE###","hintValue":"SELECT * FROM orders WHERE name LIKE :name","description":"The \u003cb\u003eselect\u003c/b\u003e query to be executed on the database with the given Data Source connection. The query might contain parameters which will be filled from the expressions defined in the parameters mapping configuration. below.","displayName":"Select Query","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"parametersMapping","example":"name \u003e \u003ccode\u003emessage.payload()\u003c/code\u003e","initValue":"###USE_DEFAULT_VALUE###","description":"Mapping of select query parameters \u003e values. Query parameters will be evaluated and replaced each time before the query is executed.","displayName":"Query Parameter Mappings","type":{"classname":"com.reedelk.module.descriptor.model.property.DynamicMapDescriptor","instance":{"keyName":"Query Parameter Name","valueName":"Query Parameter Value","tabGroup":"Query Parameter Mappings","type":"com.reedelk.runtime.api.script.dynamicmap.DynamicObjectMap"}},"whens":[]}]},{"hidden":false,"displayName":"SQL Update","description":"Executes an UPDATE SQL statement on the configured data source connection. Supported databases and drivers: H2 (org.h2.Driver), MySQL (com.mysql.cj.jdbc.Driver), Oracle (oracle.jdbc.Driver), PostgreSQL (org.postgresql.Driver).","fullyQualifiedName":"com.reedelk.database.component.Update","type":"PROCESSOR","properties":[{"name":"connection","initValue":"###USE_DEFAULT_VALUE###","description":"Data source configuration to be used by this query. Shared configurations use the same connection pool.","displayName":"Connection","type":{"classname":"com.reedelk.module.descriptor.model.property.ObjectDescriptor","instance":{"shared":"YES","dialogTitle":"Data Source Configuration","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.database.component.ConnectionConfiguration","objectProperties":[{"name":"connectionURL","example":"\u003cul\u003e\u003cli\u003eH2: jdbc:h2:~/test\u003c/li\u003e\u003cli\u003eMySQL: jdbc:mysql://localhost:3306/mydatabase\u003c/li\u003e\u003cli\u003eOracle: jdbc:oracle:thin:@localhost:1521:orcl\u003c/li\u003e\u003cli\u003ePostgreSQL: jdbc:postgresql://host:port/database\u003c/li\u003e\u003c/ul\u003e","initValue":"jdbc:mysql://localhost:3306/mydatabase","hintValue":"jdbc:mysql://localhost:3306/mydatabase","description":"The connection URL is a string that a JDBC driver uses to connect to a database. It can contain information such as where to search for the database, the name of the database to connect to, and configuration properties.","displayName":"Connection URL","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"username","example":"myDatabaseUser","initValue":"###USE_DEFAULT_VALUE###","hintValue":"myDatabaseUser","description":"The username to be used to create the database connection.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"password","example":"myDatabasePassword","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used to create the database connection.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.property.PasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[]},{"name":"databaseDriver","example":"ORACLE","initValue":"MYSQL","description":"The fully qualified name of the JDBC database driver class. The JDBC drivers must be present in the {RUNTIME_HOME}/lib directory.","displayName":"Driver","type":{"classname":"com.reedelk.module.descriptor.model.property.EnumDescriptor","instance":{"nameAndDisplayNameMap":{"MYSQL":"MySQL (com.mysql.cj.jdbc.Driver)","H2":"H2 (org.h2.Driver)","ORACLE":"Oracle (oracle.jdbc.OracleDriver)","POSTGRESQL":"PostgreSQL (org.postgresql.Driver)"},"type":"java.lang.Enum"}},"whens":[]},{"name":"minPoolSize","example":"5","initValue":"###USE_DEFAULT_VALUE###","hintValue":"3","description":"Minimum number of Connections the connection pool will maintain at any given time.","displayName":"Min Pool Size","defaultValue":"3","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]},{"name":"maxPoolSize","example":"20","initValue":"###USE_DEFAULT_VALUE###","hintValue":"15","description":"Maximum number of Connections the connection pool will maintain at any given time.","displayName":"Max Pool Size","defaultValue":"15","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]},{"name":"acquireIncrement","example":"5","initValue":"###USE_DEFAULT_VALUE###","hintValue":"3","description":"Determines how many connections at a time the connection pool will try to acquire when the pool is exhausted.","displayName":"Acquire Increment","defaultValue":"3","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[]}],"type":"com.reedelk.module.descriptor.model.property.ObjectDescriptor$TypeObject"}},"whens":[]},{"name":"query","example":"\u003cul\u003e\u003cli\u003e\u003ccode\u003eUPDATE orders SET name \u003d \u0027another name\u0027 WHERE id \u003d 1\u003c/code\u003e\u003c/li\u003e\u003cli\u003e\u003ccode\u003eUPDATE orders SET name \u003d \u0027another name\u0027, surname \u003d \u0027another surname\u0027 WHERE id \u003d 2\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e","initValue":"###USE_DEFAULT_VALUE###","hintValue":"UPDATE orders SET name \u003d \u0027another name\u0027 WHERE id \u003d 1","description":"The \u003cb\u003eupdate\u003c/b\u003e query to be executed on the database with the given Data Source connection. The query might contain parameters which will be filled from the expressions defined in the parameters mapping configuration below.","displayName":"Update Query","type":{"classname":"com.reedelk.module.descriptor.model.property.PrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[]},{"name":"parametersMapping","example":"name \u003e \u003ccode\u003emessage.payload()\u003c/code\u003e","initValue":"###USE_DEFAULT_VALUE###","description":"Mapping of update query parameters \u003e values. Query parameters will be evaluated and replaced each time before the query is executed.","displayName":"Query Parameter Mappings","type":{"classname":"com.reedelk.module.descriptor.model.property.DynamicMapDescriptor","instance":{"keyName":"Query Parameter Name","valueName":"Query Parameter Value","tabGroup":"Query Parameter Mappings","type":"com.reedelk.runtime.api.script.dynamicmap.DynamicObjectMap"}},"whens":[]}]}],"types":[{"global":false,"type":"com.reedelk.database.internal.attribute.DDLExecuteAttributes","extendsType":"com.reedelk.runtime.api.message.MessageAttributes","displayName":"Map","description":"","functions":[],"properties":[{"name":"ddl","type":"java.lang.String","example":"","description":""}]},{"global":false,"type":"com.reedelk.database.internal.attribute.DatabaseAttributes","extendsType":"com.reedelk.runtime.api.message.MessageAttributes","displayName":"Map","description":"","functions":[],"properties":[{"name":"query","type":"java.lang.String","example":"","description":""}]}]}